name: Flutter iOS Build (No Codesign)

on:
  push:
    branches:
      - main # Or your main development branch
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build_ios:
    runs-on: macos-latest # iOS builds require a macOS runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # It's recommended to pin to a specific Flutter version (e.g., '3.19.6')
          # or a minor version (e.g., '3.19.x') for more consistent builds.
          flutter-version: '3.32.0' # Updated to a specific stable version
          channel: 'stable'

      - name: Flutter Doctor (for diagnostics)
        # This step runs 'flutter doctor -v' to output detailed information
        # about the Flutter installation and environment. This can be very
        # helpful for debugging build issues.
        run: flutter doctor -v

      - name: Get Flutter Dependencies
        run: flutter pub get

      - name: Install CocoaPods
        # The 'subosito/flutter-action' typically handles CocoaPods installation.
        # This step might be redundant or cause conflicts if the action already provides it.
        # However, keeping it for now as a common step if issues persist.
        run: |
          sudo gem install cocoapods

      - name: Clean Flutter Project
        run: flutter clean

      - name: Build iOS IPA (No Codesign)
        # This command builds the IPA without requiring a signing certificate.
        # It's useful for distribution to internal testers or for CI/CD pipelines
        # where signing happens later or is handled by another system.
        run: flutter build ipa --no-codesign --release
        # If your Flutter project is not in the root, uncomment and adjust the line below:
        # working-directory: ./your_flutter_app_directory

      - name: Find IPA file
        id: find_ipa
        run: |
          # The 'flutter build ipa' command typically places the IPA in build/ios/ipa/
          # We need to find the exact path as the filename might include version numbers.
          IPA_PATH=$(find build/ios/ipa -name "*.ipa" -print -quit)
          if [ -z "$IPA_PATH" ]; then
            echo "Error: IPA file not found!"
            exit 1
          fi
          echo "Found IPA at: $IPA_PATH"
          echo "IPA_PATH=$IPA_PATH" >> $GITHUB_OUTPUT

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-ios-ipa
          path: ${{ steps.find_ipa.outputs.IPA_PATH }}
          retention-days: 7 # How long to keep the artifact (optional)
